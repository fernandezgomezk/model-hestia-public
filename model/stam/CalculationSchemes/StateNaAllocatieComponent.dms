//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template StateNaAllocatieComponent
{
	// begin case parameters
	unit<uint32> BO_base;
	// end case parameters

	unit<uint32> BO := BO_base
	{
		container Metervraag   := BO_base/Metervraag;
		container BC_kentallen := BO_base/BC_kentallen;

		container Aansluitingen := BO_base/Aansluitingen
		{
			attribute<nrAsl> Gnet   (BO) := nrAansluitingen * float64(Metervraag/gas > 0[GJ_yr]);
			attribute<nrAsl> Warmte (BO) := = 'nrAansluitingen * float64(or('+AsItemList(replace('BO/InstallatiePerProduct/@PD@ == Classifications/Installatie/V/Gebiedsoptie','@PD@',Classifications/product/name))+'))';

			attribute<nrAsl> W70    (BO) := Warmte;
			attribute<nrAsl> W50    (BO) := const(0.0[nrAsl],BO);
			attribute<nrAsl> W30    (BO) := const(0.0[nrAsl],BO);
			attribute<nrAsl> WK70   (BO) := const(0.0[nrAsl],BO);
			attribute<nrAsl> WK50   (BO) := const(0.0[nrAsl],BO);
			attribute<nrAsl> WK30   (BO) := const(0.0[nrAsl],BO);
		}

		container eenmalig := for_each_nedv(
			Classifications/GebouwOptie_eenmalig/name,
			'BO_base/eenmalig/'+ Classifications/GebouwOptie_eenmalig/name,
			BO,
			Eur)
		{
			//Aansluitbijdrages
			attribute<Eur> Ki_Asl_Enet (BO) := BC_kentallen/Ki_Aansl_e_asl * nraansluitingen + BC_kentallen/Ki_Aansl_e_opp * oppervlakte;
			attribute<Eur> Ki_Asl_Gnet (BO) := Metervraag/gas <= 0[GJ_yr]
				? 0[Eur]
				: BC_kentallen/Ki_Aansl_g_asl * nraansluitingen + BC_kentallen/Ki_Aansl_g_opp * oppervlakte;
		}
		container Kapitaallasten := for_each_nedv(
			Classifications/Gebouw_Kapitaallasten/name, 
			'BO_base/Kapitaallasten/'+ Classifications/Gebouw_Kapitaallasten/name,
			BO,
			Eur_yr);

		container Jaarlijks := for_each_nedv(
			Classifications/GebouwOptie_jaarlijks/name,
			'BO_base/jaarlijks/'+ Classifications/GebouwOptie_jaarlijks/name,
			BO,
			Eur_yr)
		{
			attribute<eur_yr> oh_KD      (BO) := BO_base/jaarlijks/oh_KD;
			attribute<eur_yr> adm_KD     (BO) := BO_base/jaarlijks/adm_KD;
			
			container Eindgebruikerskosten
			{	
				attribute<Classifications/Eigendom>	Eigendom_rel	(BO) := BO/Eigendom_rel;				
				attribute<Eur> Ki_installatie 	(BO) := eenmalig/Ki15_LO + eenmalig/Ki_VT + eenmalig/Ki20_LO + eenmalig/Ki30_LO + eenmalig/Ki_LTAS - eenmalig/Oi15_LO - eenmalig/Oi_VT - eenmalig/Oi20_LO - eenmalig/Oi30_LO; //check of LTAS hier ook bijhoort
				attribute<Eur> Ki_isolatie 		(BO) := eenmalig/Ki_gv - eenmalig/Oi_gv;
					
				container Financieringslasten  		// Hypothecaire lening voor eigenaar-bewoner, vastgoedhypotheek voor particuliere verhuurder, WSW voor sociale verhuurder
				{
					attribute<percent_yr> rentepercentage 	(BO) := ='merge(uint8(BO/Eigendom_rel), percent_yr,'+ AsItemList('Invoer/Kengetallen/Eindgebruikerskosten/rentepercentages/PerJaar/R_' + Classifications/Eigendom/c + '[Classifications/Zichtjaar/Rekenjaar_rel[Zichtjaar_rel]]')+')';
					attribute<float64> maandrente			(BO) := rentepercentage  / 12[percent_yr];
					attribute<Eur_yr> Kj_installatie 		(BO) := 12.0[_yr] * ( maandrente / (1.0-((1.0 + maandrente)^-180d)) ) * Ki_installatie;
					attribute<Eur_yr> Kj_isolatie			(BO) := Eigendom_rel == 0 ? 12.0[_yr] * ( maandrente / (1.0-((1.0 + maandrente)^-360.0d)) ) * Ki_isolatie : 12.0[_yr] * ( maandrente / (1.0-((1.0 + maandrente)^-300.0d)) ) * Ki_isolatie;					
					attribute<Eur_yr> Kj_totaal				(BO) := Kj_installatie + Kj_isolatie;
					
					container Warmtefondslening			// Warmtefondslening voor eigenaar-bewoner, null voor huurwoningen
					{
						attribute<percent_yr> rentepercentage	(BO) := Eigendom_rel == 0 ? const(Invoer/Kengetallen/Eindgebruikerskosten/rentepercentages/PerJaar/R_wf[Classifications/Zichtjaar/Rekenjaar_rel[Zichtjaar_rel]],BO) : float64(0/0);
						attribute<float64> maandrente			(BO) := rentepercentage  / 12[percent_yr];
						attribute<Eur_yr> Kj_installatie		(BO) := 12.0[_yr] * ( maandrente / (1.0-((1.0 + maandrente)^-180.0d)) ) * Ki_installatie;
						attribute<Eur_yr> Kj_isolatie			(BO) := 12.0[_yr] * ( maandrente / (1.0-((1.0 + maandrente)^-240.0d)) ) * Ki_isolatie; 
						attribute<Eur_yr> Kj_totaal				(BO) := Kj_installatie + Kj_isolatie;	
					}
					
					container nulprocentlening 
					{
						attribute<Eur_yr> Kj_installatie		(BO) := 12.0[_yr] * Ki_installatie / 180d;
						attribute<Eur_yr> Kj_isolatie			(BO) := 12.0[_yr] * Ki_isolatie / 240.0d ; 
						attribute<Eur_yr> Kj_totaal				(BO) := Kj_installatie + Kj_isolatie;
					}
				}
				
				container Huurverhoging_huurcommissiemethode 
				{
					attribute<percent_yr> rentepercentage	(BO) := Eigendom_rel != 0 ? const(Invoer/Kengetallen/Eindgebruikerskosten/rentepercentages/PerJaar/R_hc[Classifications/Zichtjaar/Rekenjaar_rel[Zichtjaar_rel]],BO) : float64(0/0);
					attribute<float64> maandrente			(BO) := rentepercentage  / 12[percent_yr];
					attribute<Eur_yr> Kj_installatie 		(BO) := 12.0[_yr] * ( maandrente / (1.0-((1.0 + maandrente)^-180.0d)) ) * Ki_installatie;
					attribute<Eur_yr> Kj_isolatie			(BO) :=	Eigendom_rel == 1 ? 12.0[_yr] * ( maandrente / (1.0-((1.0 + maandrente)^-300.0d)) ) * Ki_isolatie : 0d;
					attribute<Eur_yr> Huurverhoging         (BO) := Kj_installatie + Kj_isolatie;
				}
				
				container Huurpuntgrens
				{
					attribute<string> oppervlakteklasse	(BO) := BO/oppervlakte < 25d ? "K" : BO/oppervlakte < 40d ? "M" : "G";
					attribute<string> woningtype		(BO) := BO/bebouwingstype == 5b ? "MGW" : BO/bebouwingstype == 6b ? "MGW" : "EGW"; 
					attribute<string> EL_voor			(BO) := lookup(BO/EnergielabelBerekening/EL_rel, Classifications/EnergieLabel/Label);
					attribute<string> EL_na 			(BO) := lookup(BO/EL_rel, Classifications/EnergieLabel/Label);
					attribute<string> label				(BO) := EL_voor + '_' + EL_na + '_' + oppervlakteklasse + '_' + woningtype;
					
					attribute<int32> huurpunten_voor	(BO) := round(Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/Huurpunten); // Hier afgerond naar hele huurpunten, leek me de bedoeling
					attribute<int32> huurpunten_sprong  (BO) := makedefined(int32(rjoin(label, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_sprong/Label, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_sprong/Huurpunten)),0i);
					attribute<int32> huurpunten_na	    (BO) := huurpunten_voor + huurpunten_sprong;
					attribute<eur_mo>  huurgrens		(BO) := switch(
																		case(huurpunten_na < 40i, rjoin(40i, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurpunten, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurgrens)), 
																		case(huurpunten_na >= 40i && huurpunten_na <= 250i, rjoin(huurpunten_na, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurpunten, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurgrens)),
																		case(huurpunten_na > 250i, rjoin(250i, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurpunten, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurgrens) + 
																		((rjoin(250i, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurpunten, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurgrens) - rjoin(249i, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurpunten, Invoer/Kengetallen/Eindgebruikerskosten/huurpunten_maxhuur/huurgrens)) * float64(huurpunten_na -250i))),
																		float64(0/0));
					// op deze manier wordt het aantal huurpunten niet geupdate, het verhoogde aantal huurpunten wordt niet opgeslagen voor een later jaar. Eigenlijk moet huurpunten ergens in 
					// het model worden geupdate maar ik weet nog niet waar. Als we alleen naar 1 jaar kijken maakt het op zich niet uit maar het is niet heel netjes.
				}
				
				container Huurtoeslag //test
				{
					attribute<string> leeftijdsgroep 			(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/LeeftijdRefPers > 2b ? "boven21" : "onder21";  
					attribute<string> huishoudgrootte			(BO) := switch(
																				case(Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/AantPersHH == 1b, "1persoon"),
																				case(Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/AantPersHH == 2b, "2persoon"),
																				case(Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/AantPersHH > 2b, "3plus"),
																				"NULL"); 
					attribute<string> label						(BO) := leeftijdsgroep + "_" + huishoudgrootte;
					attribute<Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input> huurtoeslag_rel	(BO) := rlookup(label, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/Label);
				
					attribute<Eur> 	   vermogensgrens			(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/Vermogensgrens);
					attribute<Eur_yr>  inkomensgrens			(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/Inkomensgrens);	
					attribute<eur_mo>  minimum_normhuur			(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/Minimum_normhuur);
					attribute<eur_mo>  verhoging_normhuur		(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/verhoging_normhuur);
					attribute<eur_mo>  minimum_basishuur		(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/Minimum_basishuur);
					attribute<eur_mo>  aftoppingsgrens			(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/Aftoppingsgrens);
					attribute<eur_mo>  kwaliteitskortinggrens	(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/Kwaliteitskortinggrens);
					attribute<float64> factor_a					(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/factor_a);
					attribute<float64> factor_b					(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/factor_b);
					attribute<ratio>   ratio_kkg_aftopping		(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/ratio_kkg_aftopping);
					attribute<ratio>   ratio_aftopping			(BO) := lookup(huurtoeslag_rel, Invoer/Kengetallen/Eindgebruikerskosten/huurtoeslag_input/ratio_aftopping);
					
					attribute<eur_yr>  reken_inkomen 			(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/BelastbaarInkomen[Eur_yr]; //weet niet zeker of dit het goede inkomen is
					
					container Huidig
					{
						attribute<eur_mo>  rekenhuur				(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/KaleHuur[eur_mo];
						attribute<eur_mo>  normhuur					(BO) := reken_inkomen < inkomensgrens ? minimum_normhuur : factor_a * (reken_inkomen / 1[eur_yr]) ^ 2d + factor_b * reken_inkomen * 1[yr] / 1[mo]; //updaten met nieuwe CBS inkomens (primair + secundair inkomen)
						attribute<eur_mo>  basishuur				(BO) := normhuur + verhoging_normhuur;
						attribute<eur_mo>  onder_kkg				(BO) := basishuur < kwaliteitskortinggrens ? kwaliteitskortinggrens - basishuur : 0[eur_mo];
						attribute<eur_mo>  tussen_kkg_aftopping		(BO) := switch(
																				case(rekenhuur < aftoppingsgrens && rekenhuur > kwaliteitskortinggrens, rekenhuur - kwaliteitskortinggrens),
																				case(rekenhuur > aftoppingsgrens, aftoppingsgrens - kwaliteitskortinggrens),
																				case(rekenhuur < kwaliteitskortinggrens, 0[eur_mo]),
																				(0/0)[eur_mo]);
						attribute<eur_mo>  boven_aftopping			(BO) := rekenhuur > aftoppingsgrens ? rekenhuur - aftoppingsgrens : 0[eur_mo];
						attribute<eur_mo>  huurtoeslag				(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/Vermogen[eur] > vermogensgrens ? 0[eur_mo] : 
																			onder_kkg  + tussen_kkg_aftopping * ratio_kkg_aftopping + boven_aftopping + ratio_aftopping;	
					}
					
					container Na_investering
					{				
						attribute<eur_mo>  rekenhuur				(BO) := Huurverhoging_huurcommissiemethode/Huurverhoging * 1[yr] / 12[mo] + Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/KaleHuur[eur_mo];
						attribute<eur_mo>  normhuur					(BO) := reken_inkomen < inkomensgrens ? minimum_normhuur : factor_a * (reken_inkomen / 1[eur_yr]) ^ 2d + factor_b * reken_inkomen * 1[yr] / 1[mo]; //updaten met nieuwe CBS inkomens (primair + secundair inkomen)
						attribute<eur_mo>  basishuur				(BO) := normhuur + verhoging_normhuur;
						attribute<eur_mo>  onder_kkg				(BO) := basishuur < kwaliteitskortinggrens ? kwaliteitskortinggrens - basishuur : 0[eur_mo];
						attribute<eur_mo>  tussen_kkg_aftopping		(BO) := switch(
																				case(rekenhuur < aftoppingsgrens && rekenhuur > kwaliteitskortinggrens, rekenhuur - kwaliteitskortinggrens),
																				case(rekenhuur > aftoppingsgrens, aftoppingsgrens - kwaliteitskortinggrens),
																				case(rekenhuur < kwaliteitskortinggrens, 0[eur_mo]),
																				(0)[eur_mo]);
						attribute<eur_mo>  boven_aftopping			(BO) := rekenhuur > aftoppingsgrens ? rekenhuur - aftoppingsgrens : 0[eur_mo];
						attribute<eur_mo>  huurtoeslag				(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/Vermogen[eur] > vermogensgrens ? 0[eur_mo] : 
																			onder_kkg  + tussen_kkg_aftopping * ratio_kkg_aftopping + boven_aftopping + ratio_aftopping;	
					}
					
				}
				//====== Placeholder Hypotheekrenteaftrek
				container Hypotheekrenteaftrek
				{
					parameter<ratio> aandeel_investering_WOZ 		:= 0.00[ratio]; //0.60[ratio], source = "https://www.eigenhuis.nl/verduurzamen/maatregelen/zonne-energie/5-vragen-over-zonnepanelen-en-de-woz-waarde"; 
					parameter<ratio> BelastingSchijf_laag 			:= 0.3697[ratio], 	source = "https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/prive/inkomstenbelasting/heffingskortingen_boxen_tarieven/boxen_en_tarieven/overzicht_tarieven_en_schijven/"; //  (2024)
					parameter<ratio> BelastingSchijf_hoog 			:= 0.4950[ratio],	source = "https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/prive/inkomstenbelasting/heffingskortingen_boxen_tarieven/boxen_en_tarieven/overzicht_tarieven_en_schijven/"; // (2024)
					parameter<Eur_yr> Inkomensgrens_belastingschijf	:= 75518[Eur_yr], 	source = "https://www.belastingdienst.nl/wps/wcm/connect/bldcontentnl/belastingdienst/prive/inkomstenbelasting/heffingskortingen_boxen_tarieven/boxen_en_tarieven/overzicht_tarieven_en_schijven/"; // (2024) 
					parameter<Eur> WOZ_grens_eigenwoningforfait 	:= 1310000[Eur],	source = "https://www.belastingdienst.nl/wps/wcm/connect/nl/koopwoning/content/hoe-werkt-eigenwoningforfait"; // (2024)
					parameter<_yr> eigenwoningforfait_laag 			:= 0.0035[_yr], 	source = "https://www.belastingdienst.nl/wps/wcm/connect/nl/koopwoning/content/hoe-werkt-eigenwoningforfait"; // (2024)
					parameter<_yr> eigenwoningforfait_hoog_variabel := 0.0235[_yr], 	source = "https://www.belastingdienst.nl/wps/wcm/connect/nl/koopwoning/content/hoe-werkt-eigenwoningforfait"; // (2024)
					parameter<Eur_yr> eigenwoningforfait_hoog_vast 	:= 4585[Eur_yr], 	source = "https://www.belastingdienst.nl/wps/wcm/connect/nl/koopwoning/content/hoe-werkt-eigenwoningforfait"; // (2024)
					
					container Huidig
					{
						attribute<ratio> BelastingSchijf	(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/BelastbaarInkomen[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_laag[ratio]
						: Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/BelastbaarInkomen[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_hoog 
						: (0/0)[ratio];
						
						attribute<Eur_yr> Rentelasten_per_jaar 		(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/Hypotheekrentelasten * 12d [Eur_yr];
						attribute<_yr> vermoedelijk_rentepercentage_hypotheek 					(BO) := Rentelasten_per_jaar[Eur_yr] / Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/Hypotheekschuld[Eur];
						
						attribute<Eur_yr> eigenwoningforfait 									(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/WOZwaarde[Eur] < WOZ_grens_eigenwoningforfait[Eur] ? Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/WOZwaarde[Eur] * eigenwoningforfait_laag[_yr]
						: Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/WOZwaarde[Eur] >= WOZ_grens_eigenwoningforfait[Eur] ? eigenwoningforfait_hoog_vast[Eur_yr] + (Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/WOZwaarde[Eur] - WOZ_grens_eigenwoningforfait[Eur]) * eigenwoningforfait_hoog_variabel[_yr] :
						(0/0)[Eur_yr];
						
						attribute<Eur_yr> Bruto_inkomen_na_rentelasten 							(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/BelastbaarInkomen[Eur_yr] - Rentelasten_per_jaar[Eur_yr] + Eigenwoningforfait[Eur_yr];
						
						attribute<ratio> BelastingSchijf_na_rentelasten						(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_laag[ratio]
						: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_hoog 
						: (0/0)[ratio];
												
						attribute<Eur_yr> Deel_inkomen_onder									(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? Bruto_inkomen_na_rentelasten[Eur_yr]
						: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? Inkomensgrens_belastingschijf[Eur_yr]
						: (0/0)[Eur_yr];
						
						attribute<Eur_yr> Deel_inkomen_boven									(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? 0[Eur_yr]
						: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? Bruto_inkomen_na_rentelasten[Eur_yr] - Inkomensgrens_belastingschijf[Eur_yr]
						: (0/0)[Eur_yr];			
					
						attribute<Eur_yr> inkomstenbelasting					(BO) := BelastingSchijf_laag * Deel_inkomen_onder + BelastingSchijf_hoog * Deel_inkomen_boven;
					}
					
					container Na_investering
					{
						attribute<ratio> BelastingSchijf	(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/BelastbaarInkomen[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_laag[ratio]
						: Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/BelastbaarInkomen[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_hoog 
						: (0/0)[ratio];
						attribute<Eur> WOZwaarde									(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/WOZwaarde[Eur] + aandeel_investering_WOZ * (Ki_isolatie + Ki_installatie); 
						attribute<Eur_yr> eigenwoningforfait						(BO) :=  WOZwaarde < WOZ_grens_eigenwoningforfait[Eur] ? WOZwaarde[Eur] * eigenwoningforfait_laag[_yr]
						: WOZwaarde[Eur] >= WOZ_grens_eigenwoningforfait[Eur] ? eigenwoningforfait_hoog_vast[Eur_yr] + (WOZwaarde[Eur] - WOZ_grens_eigenwoningforfait[Eur]) * eigenwoningforfait_hoog_variabel[_yr]
						: (0/0)[Eur_yr];					
							
						container Hypothecaire_lening
						{
							attribute<Eur_yr> Bruto_rentelasten 				(BO) := Huidig/Rentelasten_per_jaar[Eur_yr] + (financieringslasten/rentepercentage[percent_yr]/100[percent])[_yr] * (Ki_isolatie + Ki_installatie);
							attribute<Eur_yr> Bruto_inkomen_na_rentelasten 		(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/BelastbaarInkomen[Eur_yr] - Bruto_rentelasten[Eur_yr] + Eigenwoningforfait[Eur_yr];
							
							attribute<ratio> BelastingSchijf_na_rentelasten		(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_laag[ratio]
							: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_hoog 
							: (0/0)[ratio];
							
							
							attribute<Eur_yr> Deel_inkomen_onder									(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? Bruto_inkomen_na_rentelasten[Eur_yr]
							: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? Inkomensgrens_belastingschijf[Eur_yr]
							: (0/0)[Eur_yr];
							
							attribute<Eur_yr> Deel_inkomen_boven									(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? 0[Eur_yr]
							: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? Bruto_inkomen_na_rentelasten[Eur_yr] - Inkomensgrens_belastingschijf[Eur_yr]
							: (0/0)[Eur_yr];			
						
							attribute<Eur_yr> inkomstenbelasting					(BO) := BelastingSchijf_laag * Deel_inkomen_onder + BelastingSchijf_hoog * Deel_inkomen_boven;
							
							attribute<bool> Belastingschijfverschuivingen (BO) := Belastingschijf == Belastingschijf_na_rentelasten ? FALSE : TRUE;
						}
						container Warmtefondslening
						{
							attribute<Eur_yr> Bruto_rentelasten 				(BO) := Huidig/Rentelasten_per_jaar[Eur_yr] + (financieringslasten/Warmtefondslening/rentepercentage[percent_yr]/100[percent])[_yr] * (Ki_isolatie + Ki_installatie);
							attribute<Eur_yr> Bruto_inkomen_na_rentelasten 		(BO) := Invoer/Kengetallen/Eindgebruikerskosten/WP9/vbo/huishoudenskenmerken/BelastbaarInkomen[Eur_yr] - Bruto_rentelasten[Eur_yr] + Eigenwoningforfait[Eur_yr];
							
							attribute<ratio> BelastingSchijf_na_rentelasten		(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_laag[ratio]
							: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? BelastingSchijf_hoog 
							: (0/0)[ratio];
							
							
							attribute<Eur_yr> Deel_inkomen_onder									(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? Bruto_inkomen_na_rentelasten[Eur_yr]
							: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? Inkomensgrens_belastingschijf[Eur_yr]
							: (0/0)[Eur_yr];
							
							attribute<Eur_yr> Deel_inkomen_boven									(BO) := Bruto_inkomen_na_rentelasten[Eur_yr] <= Inkomensgrens_belastingschijf[Eur_yr] ? 0[Eur_yr]
							: Bruto_inkomen_na_rentelasten[Eur_yr] > Inkomensgrens_belastingschijf[Eur_yr] ? Bruto_inkomen_na_rentelasten[Eur_yr] - Inkomensgrens_belastingschijf[Eur_yr]
							: (0/0)[Eur_yr];			
						
							attribute<Eur_yr> inkomstenbelasting					(BO) := BelastingSchijf_laag * Deel_inkomen_onder + BelastingSchijf_hoog * Deel_inkomen_boven;
							
							attribute<bool> Belastingschijfverschuivingen (BO) := Belastingschijf == Belastingschijf_na_rentelasten ? FALSE : TRUE;
						}
					}	
					
				
					attribute<Eur_yr> Belastingteruggave 						(BO) := (huidig/inkomstenbelasting - na_investering/Hypothecaire_lening/inkomstenbelasting);
					attribute<Eur_yr> Belastingteruggave_warmtefondslening 		(BO) := (huidig/inkomstenbelasting - na_investering/Warmtefondslening/inkomstenbelasting);
					
					/*
					parameter<ratio> BelastingSchijf := 0.37[ratio]; // 0.371 of 0.495 (2022)

					attribute<Eur_yr> KL_totaal    (BO) := = 'add('+AsItemlist('float64('+string(Classifications/Gebouw_Kapitaallasten/isEindgebruikerskosten)+ ') * Kapitaallasten/'+ Classifications/Gebouw_Kapitaallasten/name)+')';
					attribute<Eur_yr> wv_Aflossing (BO) := = 'add('+AsItemlist('eenmalig/'+ Classifications/Gebouwoptie_eenmalig/name + ' / float64(' + string(Classifications/GebouwOptie_eenmalig/AT) +')[yr]' ) +')' ;
					attribute<Eur_yr> RenteBedrag  (BO) := KL_totaal - wv_Aflossing;
					attribute<Eur_yr> Aftrek       (BO) := RenteBedrag * BelastingSchijf;
					*/
				}
			}
		}
	}
}

